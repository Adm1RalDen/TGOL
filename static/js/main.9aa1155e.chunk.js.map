{"version":3,"sources":["App/Authorization/login.jsx","App/MainPage/grid.jsx","App/MainPage/mainPage.jsx","App/Registration/Registration.jsx","App/Menus/menu.jsx","App/reducer/sizeGrid.js","App/reducer/arrayGrid.js","App/reducer/playsNow.js","App/reducer/speedGames.js","App/reducer/countGeneration.js","App/reducer/confirmDirty.js","App/reducer/index.js","index.js"],"names":["NormalLoginForm","handleSubmit","e","preventDefault","_this","props","form","validateFields","err","values","storage","JSON","parse","localStorage","getItem","some","val","index","email","username","password","isOnline","message","error","setItem","stringify","history","push","handeRegistration","getFieldDecorator","this","react_default","a","createElement","className","es_form","onSubmit","fun","Item","rules","required","input","prefix","icon","type","style","color","placeholder","es_button","htmlType","onClick","handeClick","React","Component","WrappedNormalLoginForm","Form","create","name","Grid","changeGridCell","i","j","console","log","arrayGrid","change","tableTemplate","_this2","map","row","rowsTemplate","cols","key","id","cellSpacing","connect","state","dispatch","Body","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","seedGeneration","temp","sizeGrid","split","arr","Math","floor","random","onChangeArrayGrid","stop","clearInterval","timerID","onChangePlaysNow","letsGo","playsNow","setInterval","play","speedGames","size","count","tempCountGeneration","countGeneration","onChangeCountGeneration","fast","speeds","onChangeSpeedGames","slow","handleExit","goBack","handleChange","bind","assertThisInitialized","changeCell","createGrid","clearGrid","onChangeSizeGrid","target","value","Reg","length","onChange","grid","payload","RegistrationForm","validateFieldsAndScroll","confirm","success","handleConfirmBlur","onChangeConfirmDirty","confirmDirty","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","force","handleBack","assign","labelCol","xs","span","sm","wrapperCol","label","hasFeedback","validator","Password","onBlur","tooltip","title","whitespace","offset","WrappedRegistrationForm","App","react_router_dom","react_router","path","exact","component","Login","Registration","innitialstate","combineReducers","arguments","undefined","action","store","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","menu","document","getElementById"],"mappings":"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","file":"static/js/main.9aa1155e.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Form, Icon, Input, Button, message, } from 'antd'; \r\nclass NormalLoginForm extends React.Component {\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        let storage = JSON.parse(localStorage.getItem(\"registraion\"));\r\n        if(storage){\r\n          function isAlive(val, index){\r\n            if(val.email === values.username) {\r\n             if(val.password === values.password){\r\n               storage[index].isOnline = true;\r\n               return true;\r\n             }else{\r\n              message.error('Пароль не верный!');\r\n               return false;\r\n             }\r\n            }\r\n            return false;\r\n          }\r\n          if(storage.some(isAlive)){\r\n            localStorage.setItem('registraion', JSON.stringify(storage));\r\n            this.props.history.push('/plays');\r\n          }\r\n          else {\r\n            message.error('Пользователя не существует');\r\n          }\r\n        }\r\n        else{\r\n          message.error('База пользователей пуста, пожалуйста зарегестрируйтесь!');\r\n        }\r\n      }\r\n              \r\n    });\r\n    \r\n  };\r\n  handeRegistration = () => {\r\n    this.props.history.push('/registration');\r\n  }\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <div className='content'>\r\n        <div className=\"d1\">Welcome</div>\r\n        <Form onSubmit={this.handleSubmit} className=\"login-form\" fun={this.props}>\r\n        <Form.Item>\r\n          {getFieldDecorator('username', {\r\n            rules: [{ required: true, message: 'Please input your username!' }],\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              placeholder=\"Username\"\r\n            />,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator('password', {\r\n            rules: [{ required: true, message: 'Please input your Password!' }],\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n            />,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" onClick={this.handeClick}>\r\n            Log in\r\n          </Button>\r\n          Or\r\n          <Button type=\"link\" onClick={this.handeRegistration}>\r\n          register now!\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n      \r\n      </div>\r\n     \r\n    );\r\n  }\r\n}\r\nconst WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(NormalLoginForm);\r\nexport default WrappedNormalLoginForm;\r\n\r\n          ","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Grid extends React.Component {\r\n\r\n    changeGridCell = (i, j) =>  {\r\n        console.log(this.props.arrayGrid[i][j]);\r\n        this.props.change(i, j);\r\n        // const cell = document.getElementById(i + '' + j);\r\n        // cell.classList = this.props.arrayGrid[i][j]? 'green' : '';\r\n    }\r\n\r\n    render () {\r\n      let tableTemplate\r\n      tableTemplate = this.props.arrayGrid.map((row, i) => {\r\n        let rowsTemplate\r\n        rowsTemplate = row.map((cols, j) => {\r\n          return <td\r\n            key={j}\r\n            id={i + '' + j}\r\n            onClick={() => {this.changeGridCell(i, j)}}\r\n            className={this.props.arrayGrid[i][j]? 'green' : null}\r\n          />\r\n        })\r\n        return <tr key={i}>{rowsTemplate}</tr>\r\n      })\r\n      return (\r\n        <div>\r\n        <table cellSpacing = \"0\">\r\n          <tbody cellSpacing = \"0\">\r\n            {tableTemplate}\r\n          </tbody>\r\n        </table>\r\n        </div>\r\n       \r\n      )\r\n    }\r\n  }\r\n\r\n  export default connect(\r\n\r\n    state => ({\r\n        arrayGrid: state.arrayGrid,\r\n    }),\r\n\r\n    dispatch => ({ })\r\n\r\n  )(Grid);","import React from 'react';\r\nimport {  message, } from 'antd'; \r\nimport { connect } from 'react-redux';\r\n\r\nimport Grid from './grid';\r\n  \r\nclass Body extends React.Component {\r\n    constructor (props) {\r\n      super(props)\r\n      this.state = {\r\n        // sizeGrid: '10x20',\r\n        // ArrayGrid: [],\r\n        // plays: false,\r\n        // speed: 500,\r\n        // countGeneration: 0\r\n      }\r\n      this.handleChange = this.handleChange.bind(this)\r\n      this.changeCell = this.changeCell.bind(this)\r\n      this.createGrid = this.createGrid.bind(this)\r\n      this.clearGrid = this.clearGrid.bind(this)\r\n    }\r\n    handleChange (e) {\r\n      this.props.onChangeSizeGrid(e.target.value);\r\n      this.props.onChangeCountGeneration(0);\r\n      // this.setState({\r\n      //   // sizeGrid: e.target.value,\r\n      //   countGeneration: 0\r\n      // });\r\n      this.stop();\r\n      this.createGrid(e.target.value);\r\n    }\r\n    changeCell (i, j) {\r\n      // console.log(i, j);\r\n      let temp = JSON.parse(JSON.stringify(this.props.arrayGrid));\r\n      temp[i][j] = !temp[i][j];\r\n      this.props.onChangeArrayGrid(temp);\r\n      // this.createGrid(e.target.value);\r\n    }\r\n    createGrid (size) {\r\n      let temp = size.split('x');\r\n      let arr = [];\r\n      for (let i = 0; i < temp[0]; i++) {\r\n        arr[i] = []\r\n        for (let j = 0; j < temp[1]; j++) {\r\n          arr[i][j] = false\r\n        }\r\n      }\r\n      this.props.onChangeArrayGrid(arr);\r\n      // this.setState({\r\n      //   ArrayGrid: arr\r\n      // })\r\n    }\r\n    componentWillMount () {\r\n      let Reg = (JSON.parse(localStorage.getItem(\"registraion\"))) ? JSON.parse(localStorage.getItem(\"registraion\")) : [];\r\n      if(Reg.length){\r\n        function isAlive(val){\r\n          console.log(val);\r\n          return val.isOnline === true;\r\n        }\r\n        if(!Reg.some(isAlive))\r\n          {\r\n            message.error('пожалуйста войдите в учетную запись!');\r\n            this.props.history.push('/');\r\n          }\r\n      }else{\r\n        this.props.history.push('/');\r\n            message.error('пожалуйста войдите в учетную запись!');\r\n    \r\n      }\r\n      this.createGrid(this.props.sizeGrid)\r\n    }\r\n    clearGrid () {\r\n      this.createGrid(this.props.sizeGrid)\r\n      this.props.onChangeCountGeneration(0);\r\n      // this.setState({\r\n      //   countGeneration: 0\r\n      // })\r\n    }\r\n    seedGeneration = () => {\r\n      let temp = this.props.sizeGrid.split('x')\r\n      let arr = []\r\n      for (let i = 0; i < temp[0]; i++) {\r\n        arr[i] = []\r\n        for (let j = 0; j < temp[1]; j++) {\r\n          if (Math.floor(Math.random() * 4) === 1) {\r\n            arr[i][j] = true\r\n          } else {\r\n            arr[i][j] = false\r\n          }\r\n        }\r\n      }\r\n      this.props.onChangeArrayGrid(arr);\r\n      // this.setState({\r\n      //   ArrayGrid: arr\r\n      // })\r\n    }\r\n    stop = () => {\r\n      clearInterval(this.timerID)\r\n      this.props.onChangePlaysNow(false);\r\n      // this.setState({\r\n      //   plays: false\r\n      // })\r\n    }\r\n    letsGo = () => {\r\n      if (this.props.playsNow === false) {\r\n        this.props.onChangePlaysNow(true);\r\n        // this.setState({\r\n        //   plays: true\r\n        // })\r\n        this.timerID = setInterval(\r\n          () => this.play(),\r\n          this.props.speedGames\r\n        )\r\n      }\r\n    }\r\n  \r\n    play = () => {\r\n      let size = this.props.sizeGrid.split('x');\r\n      let temp = JSON.parse(JSON.stringify(this.props.arrayGrid));\r\n      const arr = JSON.parse(JSON.stringify(this.props.arrayGrid));\r\n      for (let i = size[0] - 1; i >= 0; i--) {\r\n        for (let j = size[1] - 1; j >= 0; j--) {\r\n          let count = 0\r\n          if (i > 0) if (arr[i - 1][j]) count++\r\n          if (i > 0 && j > 0) if (arr[i - 1][j - 1]) count++\r\n          if (i > 0 && j < size[1] - 1) if (arr[i - 1][j + 1]) count++\r\n          if (j < size[1] - 1) if (arr[i][j + 1]) count++\r\n          if (j > 0) if (arr[i][j - 1]) count++\r\n          if (i < size[0] - 1) if (arr[i + 1][j]) count++\r\n          if (i < size[0] - 1 && j > 0) if (arr[i + 1][j - 1]) count++\r\n          if (i < size[0] - 1 && size[1] - 1) if (arr[i + 1][j + 1]) count++\r\n          if (arr[i][j] && (count < 2 || count > 3)) temp[i][j] = false\r\n          if (!arr[i][j] && count === 3) temp[i][j] = true\r\n        }\r\n      }\r\n      let tempCountGeneration = this.props.countGeneration + 1;\r\n      this.props.onChangeArrayGrid(temp);\r\n      this.props.onChangeCountGeneration(tempCountGeneration);\r\n      // this.setState({\r\n      //   // ArrayGrid: temp,\r\n      //   countGeneration: tempCountGeneration\r\n      // })\r\n    }\r\n    fast = () => {\r\n      let speeds = this.props.speedGames;\r\n      speeds -= 200;\r\n      this.props.onChangeSpeedGames(speeds);\r\n      clearInterval(this.timerID);\r\n      this.timerID = setInterval(\r\n        () => this.play(),\r\n        speeds\r\n      );\r\n    }\r\n    slow = () => {\r\n      let speeds = this.props.speedGames;\r\n      speeds += 200;\r\n      this.props.onChangeSpeedGames(speeds);\r\n      clearInterval(this.timerID);\r\n      this.timerID = setInterval(\r\n        () => this.play(),\r\n        speeds\r\n      );\r\n    }\r\n    handleExit = () => {\r\n      this.props.history.goBack();\r\n      \r\n    }\r\n    componentWillUnmount(){\r\n      let storage = JSON.parse(localStorage.getItem(\"registraion\"));\r\n        if(storage){\r\n          function isAlive(val, index){\r\n            if(val.isOnline === true) {\r\n               storage[index].isOnline = false;\r\n               return true;\r\n            }\r\n            return false;\r\n          }\r\n          if(storage.some(isAlive)){\r\n            localStorage.setItem('registraion', JSON.stringify(storage));\r\n            this.props.history.push('/');\r\n          }\r\n        }\r\n    }\r\n    render () {\r\n      // console.log('mainPage ' + this.props.arrayGrid);\r\n      return (\r\n        <div >\r\n          <div className=\"header\"><span>The Game of Life</span></div>\r\n          <div className=\"button-menus\">\r\n            <div className=\"button\" onClick={this.letsGo}>Play</div>\r\n            <div className=\"button\" onClick={this.stop}>Pause</div>\r\n            <div className=\"button\" onClick={this.clearGrid}>Clear</div>\r\n            <div className=\"button\" onClick={this.slow}>Slow</div>\r\n            <div className=\"button\" onClick={this.fast}>Fast</div>\r\n            <div className=\"button\" onClick={this.seedGeneration}>Seed</div>\r\n            <select className=\"button \" id=\"changeGrid\" size=\"1\" onChange={this.handleChange}>\r\n              <option value=\"10x20\">20x10</option>\r\n              <option value=\"30x50\">50x30</option>\r\n              <option value=\"50x70\">70x50</option>\r\n            </select>\r\n            <div className=\"button exit\" onClick={this.handleExit}>Exit</div>\r\n          </div>\r\n          <div className=\"grid-main\">\r\n            <div id=\"feeld\">\r\n              <Grid change={this.changeCell}/>\r\n            </div>\r\n          </div>\r\n          <div className=\"header\">Generation : {this.props.countGeneration}</div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  \r\nexport default connect(\r\n  state => ({\r\n      sizeGrid: state.sizeGrid,\r\n      arrayGrid: state.arrayGrid,\r\n      playsNow: state.playsNow,\r\n      speedGames: state.speedGames,\r\n      countGeneration: state.countGeneration\r\n  }),\r\n  dispatch => ({\r\n      onChangeSizeGrid: (sizeGrid) => {\r\n          dispatch({type: 'CHANGE_SIZE_GRID', payload: sizeGrid});\r\n      },\r\n      onChangeArrayGrid: (arrayGrid) => {\r\n        dispatch({type: 'CHANGE_ARRAY_GRID', payload: arrayGrid});\r\n      },\r\n      onChangePlaysNow: (playsNow) => {\r\n        dispatch({type: 'CHANGE_PLAYS_NOW', payload: playsNow});\r\n      },\r\n      onChangeSpeedGames: (speedGames) => {\r\n        dispatch({type: 'CHANGE_SPEED_GAMES', payload: speedGames});\r\n      },\r\n      onChangeCountGeneration: (countGeneration) => {\r\n        dispatch({type: 'CHANGE_COUNT_GENERATION', payload: countGeneration});\r\n      }\r\n  })\r\n)(Body);\r\n  \r\n\r\n  ","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport '../../css/registration.css';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n    Form,\r\n    Input,\r\n    Tooltip,\r\n    Icon,\r\n    message,\r\n    Button,\r\n  } from 'antd'; \r\n  class RegistrationForm extends React.Component {\r\n\r\n    handleSubmit = e => {\r\n      e.preventDefault();\r\n      this.props.form.validateFieldsAndScroll((err, values) => {\r\n        if (!err) {\r\n          let Reg = JSON.parse(localStorage.getItem(\"registraion\"));\r\n          if(!Reg){\r\n            let temp = [];\r\n            values.isOnline = false;\r\n            delete values.confirm;\r\n            temp.push(values);\r\n            localStorage.setItem('registraion', JSON.stringify(temp));\r\n            message.success('Пользователь успешно зарегестрирован');\r\n            this.props.history.push('/login');\r\n          }\r\n          else{\r\n            function isAlive(val){\r\n              return val.email === values.email\r\n            }\r\n            if(!Reg.some(isAlive))\r\n              {\r\n              values.isOnline = false;\r\n              delete values.confirm;\r\n              Reg.push(values);\r\n              localStorage.setItem('registraion', JSON.stringify(Reg));\r\n              message.success('Пользователь успешно зарегестрирован');\r\n              this.props.history.push('/login');\r\n              }\r\n            else {\r\n              message.error('Пользователь уже зарегестрирован!');\r\n            }\r\n          }\r\n        }\r\n      });\r\n    };\r\n  \r\n    handleConfirmBlur = e => {\r\n      const value = e.target.value;\r\n      this.props.onChangeConfirmDirty(this.props.confirmDirty || !!value)\r\n      // this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n    };\r\n  \r\n    compareToFirstPassword = (rule, value, callback) => {\r\n      const form = this.props.form;\r\n      if (value && value !== form.getFieldValue('password')) {\r\n        callback('Two passwords that you enter is inconsistent!');\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n  \r\n    validateToNextPassword = (rule, value, callback) => {\r\n      const form = this.props.form;\r\n      if (value && this.props.confirmDirty) {\r\n        form.validateFields(['confirm'], { force: true });\r\n      }\r\n      callback();\r\n    };\r\n\r\n    handleBack = () => {\r\n      this.props.history.goBack();\r\n    }\r\n    render() {\r\n      const { getFieldDecorator } = this.props.form;\r\n  \r\n      const formItemLayout = {\r\n        labelCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 8 },\r\n        },\r\n        wrapperCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 16 },\r\n        },\r\n      };\r\n      const tailFormItemLayout = {\r\n        wrapperCol: {\r\n          xs: {\r\n            span: 24,\r\n            offset: 0,\r\n          },\r\n          sm: {\r\n            span: 16,\r\n            offset: 8,\r\n          },\r\n        },\r\n      };\r\n      return (\r\n        <div className='content'>\r\n          <div className=\"d1\">Register</div>\r\n            <Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n          <Form.Item label=\"E-mail\">\r\n            {getFieldDecorator('email', {\r\n              rules: [\r\n                {\r\n                  type: 'email',\r\n                  message: 'The input is not valid E-mail!',\r\n                },\r\n                {\r\n                  required: true,\r\n                  message: 'Please input your E-mail!',\r\n                },\r\n              ],\r\n            })(<Input />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"Password\" hasFeedback>\r\n            {getFieldDecorator('password', {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: 'Please input your password!',\r\n                },\r\n                {\r\n                  validator: this.validateToNextPassword,\r\n                },\r\n              ],\r\n            })(<Input.Password />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"Confirm Password\" hasFeedback>\r\n            {getFieldDecorator('confirm', {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: 'Please confirm your password!',\r\n                },\r\n                {\r\n                  validator: this.compareToFirstPassword,\r\n                },\r\n              ],\r\n            })(<Input.Password onBlur={this.handleConfirmBlur} />)}\r\n          </Form.Item>\r\n          <Form.Item\r\n            label={\r\n              <span>\r\n                Nickname&nbsp;\r\n                <Tooltip title=\"What do you want others to call you?\">\r\n                  <Icon type=\"question-circle-o\" />\r\n                </Tooltip>\r\n              </span>\r\n            }\r\n          >\r\n            {getFieldDecorator('nickname', {\r\n              rules: [{ required: true, message: 'Please input your nickname!', whitespace: true }],\r\n            })(<Input />)}\r\n          </Form.Item>\r\n          <Form.Item {...tailFormItemLayout} >\r\n            <div className='button_align'>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Register\r\n            </Button>\r\n            <Button type=\"danger\" onClick={this.handleBack}>\r\n              <Icon type=\"left\" />\r\n              Go back\r\n            </Button>\r\n            </div>\r\n            \r\n          </Form.Item>\r\n        </Form>\r\n        </div>\r\n        \r\n      );\r\n    }\r\n  }\r\n  \r\n  const WrappedRegistrationForm = Form.create({ name: 'register' })(RegistrationForm);\r\n  \r\n  export default connect(\r\n    state => ({\r\n      confirmDirty: state.confirmDirty,\r\n    }),\r\n    dispatch => ({ \r\n      onChangeConfirmDirty: (confirmDirty) => {\r\n        dispatch({type: 'CHANGE_CONFIRM_DIRTY', payload: confirmDirty});\r\n      }\r\n    })\r\n  )(WrappedRegistrationForm);","\r\nimport React from 'react';\r\nimport { Route, HashRouter } from \"react-router-dom\";\r\nimport Login from '../Authorization/login';\r\nimport Body from '../MainPage/mainPage';\r\nimport 'antd/dist/antd.css';\r\nimport Registration from '../Registration/Registration';\r\n\r\nclass App extends React.Component {\r\n  render() {      \r\n    return (\r\n      <HashRouter >\r\n            <Route path=\"/login\" exact component={Login} />\r\n            <Route path=\"/plays\" exact component={Body} />\r\n            <Route path=\"/\" exact component={Login} />\r\n            <Route path=\"/registration\" exact component={Registration} />\r\n      </HashRouter>\r\n\r\n    );\r\n  }\r\n}\r\n  export default App;","const innitialstate = '10x20';\r\n\r\nexport default function sizeGrid(state = innitialstate, action) {\r\n    if(action.type === 'CHANGE_SIZE_GRID'){\r\n        return action.payload;\r\n\r\n    }\r\n    return state;\r\n}","const innitialstate = [];\r\n\r\nexport default function arrayGrid(state = innitialstate, action) {\r\n    if(action.type === 'CHANGE_ARRAY_GRID'){\r\n        return action.payload;\r\n    }\r\n    return state;\r\n}","const innitialstate = false;\r\n\r\nexport default function playsNow(state = innitialstate, action) {\r\n    if(action.type === 'CHANGE_PLAYS_NOW'){\r\n        return action.payload;\r\n    }\r\n    return state;\r\n}","const innitialstate = 500;\r\n\r\nexport default function speedGames(state = innitialstate, action) {\r\n    if(action.type === 'CHANGE_SPEED_GAMES'){\r\n        return action.payload;\r\n    }\r\n    return state;\r\n}","const innitialstate = 0;\r\n\r\nexport default function countGeneration(state = innitialstate, action) {\r\n    if(action.type === 'CHANGE_COUNT_GENERATION'){\r\n        return action.payload;\r\n    }\r\n    return state;\r\n}","const innitialstate = false;\r\n\r\nexport default function confirmDirty(state = innitialstate, action) {\r\n    if(action.type === 'CHANGE_CONFIRM_DIRTY'){\r\n        return action.payload;\r\n    }\r\n    return state;\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport sizeGrid from './sizeGrid';\r\nimport arrayGrid from './arrayGrid';\r\nimport playsNow from './playsNow';\r\nimport speedGames from './speedGames';\r\nimport countGeneration from './countGeneration';\r\nimport confirmDirty from './confirmDirty';\r\n\r\nexport default combineReducers({\r\n    sizeGrid,\r\n    arrayGrid,\r\n    playsNow,\r\n    speedGames,\r\n    countGeneration,\r\n    confirmDirty\r\n});","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './css/index.css'\r\nimport {Provider} from 'react-redux';\r\nimport { createStore } from 'redux';\r\n\r\nimport Menus from './App/Menus/menu'\r\nimport reducer from './App/reducer/index'\r\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION__()); // передається функція\r\n\r\nReactDOM.render(\r\n  <Provider store = {store}>\r\n     <Menus />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}