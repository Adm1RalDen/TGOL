{"version":3,"sources":["App/Authorization/login.jsx","App/MainPage/grid.jsx","App/MainPage/mainPage.jsx","App/Registration/Registration.jsx","App/Menus/menu.jsx","App/reducer/sizeGrid.js","App/reducer/arrayGrid.js","App/reducer/playsNow.js","App/reducer/speedGames.js","App/reducer/countGeneration.js","App/reducer/confirmDirty.js","App/reducer/index.js","index.js"],"names":["NormalLoginForm","handleSubmit","e","preventDefault","_this","props","form","validateFields","err","values","storage","JSON","parse","localStorage","getItem","some","val","index","email","username","password","isOnline","message","error","setItem","stringify","history","push","handeRegistration","getFieldDecorator","this","react_default","a","createElement","className","es_form","onSubmit","fun","Item","rules","required","input","prefix","icon","type","style","color","placeholder","es_button","htmlType","onClick","handeClick","React","Component","WrappedNormalLoginForm","Form","create","name","Grid","changeGridCell","i","j","console","log","arrayGrid","change","document","getElementById","classList","toggle","tableTemplate","_this2","map","row","rowsTemplate","cols","key","id","cellSpacing","connect","state","dispatch","Body","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","seedGeneration","temp","sizeGrid","split","arr","Math","floor","random","onChangeArrayGrid","stop","clearInterval","timerID","onChangePlaysNow","letsGo","playsNow","setInterval","play","speedGames","size","count","tempCountGeneration","countGeneration","onChangeCountGeneration","fast","speeds","onChangeSpeedGames","slow","handleExit","goBack","handleChange","bind","assertThisInitialized","changeCell","createGrid","clearGrid","onChangeSizeGrid","target","value","Reg","length","setState","onChange","grid","payload","RegistrationForm","validateFieldsAndScroll","confirm","success","handleConfirmBlur","onChangeConfirmDirty","confirmDirty","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","force","handleBack","assign","labelCol","xs","span","sm","wrapperCol","label","hasFeedback","validator","Password","onBlur","tooltip","title","whitespace","offset","WrappedRegistrationForm","App","react_router_dom","react_router","path","exact","component","Login","Registration","innitialstate","combineReducers","arguments","undefined","action","store","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","menu"],"mappings":"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","file":"static/js/main.a70cb1e3.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Form, Icon, Input, Button, message, } from 'antd'; \r\nclass NormalLoginForm extends React.Component {\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        let storage = JSON.parse(localStorage.getItem(\"registraion\"));\r\n        if(storage){\r\n          function isAlive(val, index){\r\n            if(val.email === values.username) {\r\n             if(val.password === values.password){\r\n               storage[index].isOnline = true;\r\n               return true;\r\n             }else{\r\n              message.error('Пароль не верный!');\r\n               return false;\r\n             }\r\n            }\r\n            return false;\r\n          }\r\n          if(storage.some(isAlive)){\r\n            localStorage.setItem('registraion', JSON.stringify(storage));\r\n            this.props.history.push('/plays');\r\n          }\r\n          else {\r\n            message.error('Пользователя не существует');\r\n          }\r\n        }\r\n        else{\r\n          message.error('База пользователей пуста, пожалуйста зарегестрируйтесь!');\r\n        }\r\n      }\r\n              \r\n    });\r\n    \r\n  };\r\n  handeRegistration = () => {\r\n    this.props.history.push('/registration');\r\n  }\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <div className='content'>\r\n        <div className=\"d1\">Welcome</div>\r\n        <Form onSubmit={this.handleSubmit} className=\"login-form\" fun={this.props}>\r\n        <Form.Item>\r\n          {getFieldDecorator('username', {\r\n            rules: [{ required: true, message: 'Please input your username!' }],\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              placeholder=\"Username\"\r\n            />,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator('password', {\r\n            rules: [{ required: true, message: 'Please input your Password!' }],\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n            />,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" onClick={this.handeClick}>\r\n            Log in\r\n          </Button>\r\n          Or\r\n          <Button type=\"link\" onClick={this.handeRegistration}>\r\n          register now!\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n      \r\n      </div>\r\n     \r\n    );\r\n  }\r\n}\r\nconst WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(NormalLoginForm);\r\nexport default WrappedNormalLoginForm;\r\n\r\n          ","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Grid extends React.Component {\r\n\r\n    changeGridCell = (i, j) =>  {\r\n        console.log(this.props.arrayGrid[i][j]);\r\n        this.props.change(i, j);\r\n        const cell = document.getElementById(i + '' + j);\r\n        cell.classList.toggle('green');\r\n    }\r\n    render () {\r\n      let tableTemplate\r\n      tableTemplate = this.props.arrayGrid.map((row, i) => {\r\n        let rowsTemplate\r\n        rowsTemplate = row.map((cols, j) => {\r\n          return <td\r\n            key={j}\r\n            id={i + '' + j}\r\n            onClick={() => {this.changeGridCell(i, j)}}\r\n            className={this.props.arrayGrid[i][j] ? 'green' : null}\r\n          />\r\n        })\r\n        return <tr key={i}>{rowsTemplate}</tr>\r\n      })\r\n      return (\r\n        <div>\r\n        <table cellSpacing = \"0\">\r\n          <tbody cellSpacing = \"0\">\r\n            {tableTemplate}\r\n          </tbody>\r\n        </table>\r\n        </div>\r\n       \r\n      )\r\n    }\r\n  }\r\n\r\n  export default connect(\r\n    state => ({\r\n        arrayGrid: state.arrayGrid,\r\n    }),\r\n    dispatch => ({ })\r\n  )(Grid);","import React from 'react';\r\nimport {  message, } from 'antd'; \r\nimport { connect } from 'react-redux';\r\n\r\nimport Grid from './grid';\r\n  \r\nclass Body extends React.Component {\r\n    constructor (props) {\r\n      super(props)\r\n      this.state = {\r\n        // sizeGrid: '10x20',\r\n        // ArrayGrid: [],\r\n        // plays: false,\r\n        // speed: 500,\r\n        // countGeneration: 0\r\n      }\r\n      this.handleChange = this.handleChange.bind(this)\r\n      this.changeCell = this.changeCell.bind(this)\r\n      this.createGrid = this.createGrid.bind(this)\r\n      this.clearGrid = this.clearGrid.bind(this)\r\n    }\r\n    handleChange (e) {\r\n      this.props.onChangeSizeGrid(e.target.value);\r\n      this.props.onChangeCountGeneration(0);\r\n      // this.setState({\r\n      //   // sizeGrid: e.target.value,\r\n      //   countGeneration: 0\r\n      // });\r\n      this.stop();\r\n      this.createGrid(e.target.value);\r\n    }\r\n    changeCell (i, j) {\r\n      // console.log(i, j);\r\n      let temp = this.props.arrayGrid;\r\n      temp[i][j] = !temp[i][j];\r\n      this.props.onChangeArrayGrid(temp);\r\n      // this.createGrid(e.target.value);\r\n    }\r\n    createGrid (size) {\r\n      let temp = size.split('x');\r\n      let arr = [];\r\n      for (let i = 0; i < temp[0]; i++) {\r\n        arr[i] = []\r\n        for (let j = 0; j < temp[1]; j++) {\r\n          arr[i][j] = false\r\n        }\r\n      }\r\n      this.props.onChangeArrayGrid(arr);\r\n      // this.setState({\r\n      //   ArrayGrid: arr\r\n      // })\r\n    }\r\n    componentWillMount () {\r\n      let Reg = (JSON.parse(localStorage.getItem(\"registraion\"))) ? JSON.parse(localStorage.getItem(\"registraion\")) : [];\r\n      if(Reg.length){\r\n        function isAlive(val){\r\n          console.log(val);\r\n          return val.isOnline === true;\r\n        }\r\n        if(!Reg.some(isAlive))\r\n          {\r\n            message.error('пожалуйста войдите в учетную запись!');\r\n            this.props.history.push('/');\r\n          }\r\n      }else{\r\n        this.props.history.push('/');\r\n            message.error('пожалуйста войдите в учетную запись!');\r\n    \r\n      }\r\n      this.createGrid(this.props.sizeGrid)\r\n    }\r\n    clearGrid () {\r\n      this.createGrid(this.props.sizeGrid)\r\n      this.props.onChangeCountGeneration(0);\r\n      this.setState({\r\n        countGeneration: 0\r\n      })\r\n    }\r\n    seedGeneration = () => {\r\n      let temp = this.props.sizeGrid.split('x')\r\n      let arr = []\r\n      for (let i = 0; i < temp[0]; i++) {\r\n        arr[i] = []\r\n        for (let j = 0; j < temp[1]; j++) {\r\n          if (Math.floor(Math.random() * 4) === 1) {\r\n            arr[i][j] = true\r\n          } else {\r\n            arr[i][j] = false\r\n          }\r\n        }\r\n      }\r\n      this.props.onChangeArrayGrid(arr);\r\n      // this.setState({\r\n      //   ArrayGrid: arr\r\n      // })\r\n    }\r\n    stop = () => {\r\n      clearInterval(this.timerID)\r\n      this.props.onChangePlaysNow(false);\r\n      // this.setState({\r\n      //   plays: false\r\n      // })\r\n    }\r\n    letsGo = () => {\r\n      if (this.props.playsNow === false) {\r\n        this.props.onChangePlaysNow(true);\r\n        // this.setState({\r\n        //   plays: true\r\n        // })\r\n        this.timerID = setInterval(\r\n          () => this.play(),\r\n          this.props.speedGames\r\n        )\r\n      }\r\n    }\r\n  \r\n    play = () => {\r\n      let size = this.props.sizeGrid.split('x');\r\n      let temp = JSON.parse(JSON.stringify(this.props.arrayGrid));\r\n      const arr = JSON.parse(JSON.stringify(this.props.arrayGrid));\r\n      for (let i = size[0] - 1; i >= 0; i--) {\r\n        for (let j = size[1] - 1; j >= 0; j--) {\r\n          let count = 0\r\n          if (i > 0) if (arr[i - 1][j]) count++\r\n          if (i > 0 && j > 0) if (arr[i - 1][j - 1]) count++\r\n          if (i > 0 && j < size[1] - 1) if (arr[i - 1][j + 1]) count++\r\n          if (j < size[1] - 1) if (arr[i][j + 1]) count++\r\n          if (j > 0) if (arr[i][j - 1]) count++\r\n          if (i < size[0] - 1) if (arr[i + 1][j]) count++\r\n          if (i < size[0] - 1 && j > 0) if (arr[i + 1][j - 1]) count++\r\n          if (i < size[0] - 1 && size[1] - 1) if (arr[i + 1][j + 1]) count++\r\n          if (arr[i][j] && (count < 2 || count > 3)) temp[i][j] = false\r\n          if (!arr[i][j] && count === 3) temp[i][j] = true\r\n        }\r\n      }\r\n      let tempCountGeneration = this.props.countGeneration + 1;\r\n      this.props.onChangeArrayGrid(temp);\r\n      this.props.onChangeCountGeneration(tempCountGeneration);\r\n      // this.setState({\r\n      //   // ArrayGrid: temp,\r\n      //   countGeneration: tempCountGeneration\r\n      // })\r\n    }\r\n    fast = () => {\r\n      let speeds = this.props.speedGames;\r\n      speeds -= 200;\r\n      this.props.onChangeSpeedGames(speeds);\r\n      clearInterval(this.timerID);\r\n      this.timerID = setInterval(\r\n        () => this.play(),\r\n        speeds\r\n      );\r\n    }\r\n    slow = () => {\r\n      let speeds = this.props.speedGames;\r\n      speeds += 200;\r\n      this.props.onChangeSpeedGames(speeds);\r\n      clearInterval(this.timerID);\r\n      this.timerID = setInterval(\r\n        () => this.play(),\r\n        speeds\r\n      );\r\n    }\r\n    handleExit = () => {\r\n      this.props.history.goBack();\r\n      \r\n    }\r\n    componentWillUnmount(){\r\n      let storage = JSON.parse(localStorage.getItem(\"registraion\"));\r\n        if(storage){\r\n          function isAlive(val, index){\r\n            if(val.isOnline === true) {\r\n               storage[index].isOnline = false;\r\n               return true;\r\n            }\r\n            return false;\r\n          }\r\n          if(storage.some(isAlive)){\r\n            localStorage.setItem('registraion', JSON.stringify(storage));\r\n            this.props.history.push('/');\r\n          }\r\n        }\r\n    }\r\n    render () {\r\n      // console.log('mainPage ' + this.props.arrayGrid);\r\n      return (\r\n        <div >\r\n          <div className=\"header\"><span>The Game of Life</span></div>\r\n          <div className=\"button-menus\">\r\n            <div className=\"button\" onClick={this.letsGo}>Play</div>\r\n            <div className=\"button\" onClick={this.stop}>Pause</div>\r\n            <div className=\"button\" onClick={this.clearGrid}>Clear</div>\r\n            <div className=\"button\" onClick={this.slow}>Slow</div>\r\n            <div className=\"button\" onClick={this.fast}>Fast</div>\r\n            <div className=\"button\" onClick={this.seedGeneration}>Seed</div>\r\n            <select className=\"button \" id=\"changeGrid\" size=\"1\" onChange={this.handleChange}>\r\n              <option value=\"10x20\">20x10</option>\r\n              <option value=\"30x50\">50x30</option>\r\n              <option value=\"50x70\">70x50</option>\r\n            </select>\r\n            <div className=\"button exit\" onClick={this.handleExit}>Exit</div>\r\n          </div>\r\n          <div className=\"grid-main\">\r\n            <div id=\"feeld\">\r\n              <Grid change={this.changeCell}/>\r\n            </div>\r\n          </div>\r\n          <div className=\"header\">Generation : {this.props.countGeneration}</div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  \r\nexport default connect(\r\n  state => ({\r\n      sizeGrid: state.sizeGrid,\r\n      arrayGrid: state.arrayGrid,\r\n      playsNow: state.playsNow,\r\n      speedGames: state.speedGames,\r\n      countGeneration: state.countGeneration\r\n  }),\r\n  dispatch => ({\r\n      onChangeSizeGrid: (sizeGrid) => {\r\n          dispatch({type: 'CHANGE_SIZE_GRID', payload: sizeGrid});\r\n      },\r\n      onChangeArrayGrid: (arrayGrid) => {\r\n        dispatch({type: 'CHANGE_ARRAY_GRID', payload: arrayGrid});\r\n      },\r\n      onChangePlaysNow: (playsNow) => {\r\n        dispatch({type: 'CHANGE_PLAYS_NOW', payload: playsNow});\r\n      },\r\n      onChangeSpeedGames: (speedGames) => {\r\n        dispatch({type: 'CHANGE_SPEED_GAMES', payload: speedGames});\r\n      },\r\n      onChangeCountGeneration: (countGeneration) => {\r\n        dispatch({type: 'CHANGE_COUNT_GENERATION', payload: countGeneration});\r\n      }\r\n  })\r\n)(Body);\r\n  \r\n\r\n  ","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n    Form,\r\n    Input,\r\n    Tooltip,\r\n    Icon,\r\n    message,\r\n    Button,\r\n  } from 'antd';  \r\n  class RegistrationForm extends React.Component {\r\n    // state = {\r\n    //   confirmDirty: false,\r\n    // };\r\n  \r\n    handleSubmit = e => {\r\n      e.preventDefault();\r\n      this.props.form.validateFieldsAndScroll((err, values) => {\r\n        if (!err) {\r\n          let Reg = JSON.parse(localStorage.getItem(\"registraion\"));\r\n          if(!Reg){\r\n            let temp = [];\r\n            values.isOnline = false;\r\n            delete values.confirm;\r\n            temp.push(values);\r\n            localStorage.setItem('registraion', JSON.stringify(temp));\r\n            message.success('Пользователь успешно зарегестрирован');\r\n            this.props.history.push('/login');\r\n          }\r\n          else{\r\n            function isAlive(val){\r\n              return val.email === values.email\r\n            }\r\n            if(!Reg.some(isAlive))\r\n              {\r\n              values.isOnline = false;\r\n              delete values.confirm;\r\n              Reg.push(values);\r\n              localStorage.setItem('registraion', JSON.stringify(Reg));\r\n              message.success('Пользователь успешно зарегестрирован');\r\n              this.props.history.push('/login');\r\n              }\r\n            else {\r\n              message.error('Пользователь уже зарегестрирован!');\r\n            }\r\n          }\r\n        }\r\n      });\r\n    };\r\n  \r\n    handleConfirmBlur = e => {\r\n      const value = e.target.value;\r\n      this.props.onChangeConfirmDirty(this.props.confirmDirty || !!value)\r\n      // this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n    };\r\n  \r\n    compareToFirstPassword = (rule, value, callback) => {\r\n      const form = this.props.form;\r\n      if (value && value !== form.getFieldValue('password')) {\r\n        callback('Two passwords that you enter is inconsistent!');\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n  \r\n    validateToNextPassword = (rule, value, callback) => {\r\n      const form = this.props.form;\r\n      if (value && this.props.confirmDirty) {\r\n        form.validateFields(['confirm'], { force: true });\r\n      }\r\n      callback();\r\n    };\r\n\r\n    handleBack = () => {\r\n      this.props.history.goBack();\r\n    }\r\n    render() {\r\n      const { getFieldDecorator } = this.props.form;\r\n  \r\n      const formItemLayout = {\r\n        labelCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 8 },\r\n        },\r\n        wrapperCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 16 },\r\n        },\r\n      };\r\n      const tailFormItemLayout = {\r\n        wrapperCol: {\r\n          xs: {\r\n            span: 24,\r\n            offset: 0,\r\n          },\r\n          sm: {\r\n            span: 16,\r\n            offset: 8,\r\n          },\r\n        },\r\n      };\r\n      return (\r\n        <div className='content'>\r\n          <div className=\"d1\">Register</div>\r\n            <Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n          <Form.Item label=\"E-mail\">\r\n            {getFieldDecorator('email', {\r\n              rules: [\r\n                {\r\n                  type: 'email',\r\n                  message: 'The input is not valid E-mail!',\r\n                },\r\n                {\r\n                  required: true,\r\n                  message: 'Please input your E-mail!',\r\n                },\r\n              ],\r\n            })(<Input />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"Password\" hasFeedback>\r\n            {getFieldDecorator('password', {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: 'Please input your password!',\r\n                },\r\n                {\r\n                  validator: this.validateToNextPassword,\r\n                },\r\n              ],\r\n            })(<Input.Password />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"Confirm Password\" hasFeedback>\r\n            {getFieldDecorator('confirm', {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: 'Please confirm your password!',\r\n                },\r\n                {\r\n                  validator: this.compareToFirstPassword,\r\n                },\r\n              ],\r\n            })(<Input.Password onBlur={this.handleConfirmBlur} />)}\r\n          </Form.Item>\r\n          <Form.Item\r\n            label={\r\n              <span>\r\n                Nickname&nbsp;\r\n                <Tooltip title=\"What do you want others to call you?\">\r\n                  <Icon type=\"question-circle-o\" />\r\n                </Tooltip>\r\n              </span>\r\n            }\r\n          >\r\n            {getFieldDecorator('nickname', {\r\n              rules: [{ required: true, message: 'Please input your nickname!', whitespace: true }],\r\n            })(<Input />)}\r\n          </Form.Item>\r\n          <Form.Item {...tailFormItemLayout} >\r\n            <div className='button_align'>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Register\r\n            </Button>\r\n            <Button type=\"danger\" onClick={this.handleBack}>\r\n              <Icon type=\"left\" />\r\n              Go back\r\n            </Button>\r\n            </div>\r\n            \r\n          </Form.Item>\r\n        </Form>\r\n        </div>\r\n        \r\n      );\r\n    }\r\n  }\r\n  \r\n  const WrappedRegistrationForm = Form.create({ name: 'register' })(RegistrationForm);\r\n  \r\n  export default connect(\r\n    state => ({\r\n      confirmDirty: state.confirmDirty,\r\n    }),\r\n    dispatch => ({ \r\n      onChangeConfirmDirty: (confirmDirty) => {\r\n        dispatch({type: 'CHANGE_CONFIRM_DIRTY', payload: confirmDirty});\r\n      }\r\n    })\r\n  )(WrappedRegistrationForm);","\r\nimport React from 'react';\r\nimport { Route, HashRouter } from \"react-router-dom\";\r\nimport Login from '../Authorization/login';\r\nimport Body from '../MainPage/mainPage';\r\nimport 'antd/dist/antd.css';\r\nimport Registration from '../Registration/Registration';\r\n\r\nclass App extends React.Component {\r\n  render() {      \r\n    return (\r\n      <HashRouter >\r\n            <Route path=\"/login\" exact component={Login} />\r\n            <Route path=\"/plays\" exact component={Body} />\r\n            <Route path=\"/\" exact component={Login} />\r\n            <Route path=\"/registration\" exact component={Registration} />\r\n      </HashRouter>\r\n\r\n    );\r\n  }\r\n}\r\n  export default App;","const innitialstate = '10x20';\r\n\r\nexport default function sizeGrid(state = innitialstate, action) {\r\n    if(action.type === 'CHANGE_SIZE_GRID'){\r\n        return action.payload;\r\n\r\n    }\r\n    return state;\r\n}","const innitialstate = [];\r\n\r\nexport default function arrayGrid(state = innitialstate, action) {\r\n    if(action.type === 'CHANGE_ARRAY_GRID'){\r\n        return action.payload;\r\n    }\r\n    return state;\r\n}","const innitialstate = false;\r\n\r\nexport default function playsNow(state = innitialstate, action) {\r\n    if(action.type === 'CHANGE_PLAYS_NOW'){\r\n        return action.payload;\r\n    }\r\n    return state;\r\n}","const innitialstate = 500;\r\n\r\nexport default function speedGames(state = innitialstate, action) {\r\n    if(action.type === 'CHANGE_SPEED_GAMES'){\r\n        return action.payload;\r\n    }\r\n    return state;\r\n}","const innitialstate = 0;\r\n\r\nexport default function countGeneration(state = innitialstate, action) {\r\n    if(action.type === 'CHANGE_COUNT_GENERATION'){\r\n        return action.payload;\r\n    }\r\n    return state;\r\n}","const innitialstate = false;\r\n\r\nexport default function confirmDirty(state = innitialstate, action) {\r\n    if(action.type === 'CHANGE_CONFIRM_DIRTY'){\r\n        return action.payload;\r\n    }\r\n    return state;\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport sizeGrid from './sizeGrid';\r\nimport arrayGrid from './arrayGrid';\r\nimport playsNow from './playsNow';\r\nimport speedGames from './speedGames';\r\nimport countGeneration from './countGeneration';\r\nimport confirmDirty from './confirmDirty';\r\n\r\nexport default combineReducers({\r\n    sizeGrid,\r\n    arrayGrid,\r\n    playsNow,\r\n    speedGames,\r\n    countGeneration,\r\n    confirmDirty\r\n});","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './css/index.css'\r\nimport {Provider} from 'react-redux';\r\nimport { createStore } from 'redux';\r\n\r\nimport Menus from './App/Menus/menu'\r\nimport reducer from './App/reducer/index'\r\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION__()); // передається функція\r\n\r\nReactDOM.render(\r\n  <Provider store = {store}>\r\n     <Menus />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}